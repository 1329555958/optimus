<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.netfinworks.optimus.mapper.ChanViewEntityMapper" >
  <resultMap id="BaseResultMap" type="com.netfinworks.optimus.entity.ChanViewEntity" >
    <id column="id" property="id" jdbcType="VARCHAR" />
    <result column="chan_id" property="chanId" jdbcType="VARCHAR" />
    <result column="date" property="date" jdbcType="DATE" />
    <result column="previous" property="previous" jdbcType="DECIMAL" />
    <result column="deposit" property="deposit" jdbcType="DECIMAL" />
    <result column="withdraw" property="withdraw" jdbcType="DECIMAL" />
    <result column="invest" property="invest" jdbcType="DECIMAL" />
    <result column="principal" property="principal" jdbcType="DECIMAL" />
    <result column="interest" property="interest" jdbcType="DECIMAL" />
    <result column="provision_invest" property="provisionInvest" jdbcType="DECIMAL" />
    <result column="provision_principal" property="provisionPrincipal" jdbcType="DECIMAL" />
    <result column="provision_interest" property="provisionInterest" jdbcType="DECIMAL" />
    <result column="balance" property="balance" jdbcType="DECIMAL" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, chan_id, date, previous, deposit, withdraw, invest, principal, interest, provision_invest, 
    provision_principal, provision_interest, balance, create_time
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.netfinworks.optimus.entity.ChanViewEntityExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from t_chan_view
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
    <if test="limitStart != null and limitStart >= 0" >
      limit #{limitStart}, #{limitEnd}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from t_chan_view
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from t_chan_view
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.netfinworks.optimus.entity.ChanViewEntityExample" >
    delete from t_chan_view
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.netfinworks.optimus.entity.ChanViewEntity" >
    insert into t_chan_view (id, chan_id, date, 
      previous, deposit, withdraw, 
      invest, principal, interest, 
      provision_invest, provision_principal, provision_interest, 
      balance, create_time)
    values (#{id,jdbcType=VARCHAR}, #{chanId,jdbcType=VARCHAR}, #{date,jdbcType=DATE}, 
      #{previous,jdbcType=DECIMAL}, #{deposit,jdbcType=DECIMAL}, #{withdraw,jdbcType=DECIMAL}, 
      #{invest,jdbcType=DECIMAL}, #{principal,jdbcType=DECIMAL}, #{interest,jdbcType=DECIMAL}, 
      #{provisionInvest,jdbcType=DECIMAL}, #{provisionPrincipal,jdbcType=DECIMAL}, #{provisionInterest,jdbcType=DECIMAL}, 
      #{balance,jdbcType=DECIMAL}, #{createTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.netfinworks.optimus.entity.ChanViewEntity" >
    insert into t_chan_view
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="chanId != null" >
        chan_id,
      </if>
      <if test="date != null" >
        date,
      </if>
      <if test="previous != null" >
        previous,
      </if>
      <if test="deposit != null" >
        deposit,
      </if>
      <if test="withdraw != null" >
        withdraw,
      </if>
      <if test="invest != null" >
        invest,
      </if>
      <if test="principal != null" >
        principal,
      </if>
      <if test="interest != null" >
        interest,
      </if>
      <if test="provisionInvest != null" >
        provision_invest,
      </if>
      <if test="provisionPrincipal != null" >
        provision_principal,
      </if>
      <if test="provisionInterest != null" >
        provision_interest,
      </if>
      <if test="balance != null" >
        balance,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="chanId != null" >
        #{chanId,jdbcType=VARCHAR},
      </if>
      <if test="date != null" >
        #{date,jdbcType=DATE},
      </if>
      <if test="previous != null" >
        #{previous,jdbcType=DECIMAL},
      </if>
      <if test="deposit != null" >
        #{deposit,jdbcType=DECIMAL},
      </if>
      <if test="withdraw != null" >
        #{withdraw,jdbcType=DECIMAL},
      </if>
      <if test="invest != null" >
        #{invest,jdbcType=DECIMAL},
      </if>
      <if test="principal != null" >
        #{principal,jdbcType=DECIMAL},
      </if>
      <if test="interest != null" >
        #{interest,jdbcType=DECIMAL},
      </if>
      <if test="provisionInvest != null" >
        #{provisionInvest,jdbcType=DECIMAL},
      </if>
      <if test="provisionPrincipal != null" >
        #{provisionPrincipal,jdbcType=DECIMAL},
      </if>
      <if test="provisionInterest != null" >
        #{provisionInterest,jdbcType=DECIMAL},
      </if>
      <if test="balance != null" >
        #{balance,jdbcType=DECIMAL},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.netfinworks.optimus.entity.ChanViewEntityExample" resultType="java.lang.Integer" >
    select count(*) from t_chan_view
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update t_chan_view
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=VARCHAR},
      </if>
      <if test="record.chanId != null" >
        chan_id = #{record.chanId,jdbcType=VARCHAR},
      </if>
      <if test="record.date != null" >
        date = #{record.date,jdbcType=DATE},
      </if>
      <if test="record.previous != null" >
        previous = #{record.previous,jdbcType=DECIMAL},
      </if>
      <if test="record.deposit != null" >
        deposit = #{record.deposit,jdbcType=DECIMAL},
      </if>
      <if test="record.withdraw != null" >
        withdraw = #{record.withdraw,jdbcType=DECIMAL},
      </if>
      <if test="record.invest != null" >
        invest = #{record.invest,jdbcType=DECIMAL},
      </if>
      <if test="record.principal != null" >
        principal = #{record.principal,jdbcType=DECIMAL},
      </if>
      <if test="record.interest != null" >
        interest = #{record.interest,jdbcType=DECIMAL},
      </if>
      <if test="record.provisionInvest != null" >
        provision_invest = #{record.provisionInvest,jdbcType=DECIMAL},
      </if>
      <if test="record.provisionPrincipal != null" >
        provision_principal = #{record.provisionPrincipal,jdbcType=DECIMAL},
      </if>
      <if test="record.provisionInterest != null" >
        provision_interest = #{record.provisionInterest,jdbcType=DECIMAL},
      </if>
      <if test="record.balance != null" >
        balance = #{record.balance,jdbcType=DECIMAL},
      </if>
      <if test="record.createTime != null" >
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update t_chan_view
    set id = #{record.id,jdbcType=VARCHAR},
      chan_id = #{record.chanId,jdbcType=VARCHAR},
      date = #{record.date,jdbcType=DATE},
      previous = #{record.previous,jdbcType=DECIMAL},
      deposit = #{record.deposit,jdbcType=DECIMAL},
      withdraw = #{record.withdraw,jdbcType=DECIMAL},
      invest = #{record.invest,jdbcType=DECIMAL},
      principal = #{record.principal,jdbcType=DECIMAL},
      interest = #{record.interest,jdbcType=DECIMAL},
      provision_invest = #{record.provisionInvest,jdbcType=DECIMAL},
      provision_principal = #{record.provisionPrincipal,jdbcType=DECIMAL},
      provision_interest = #{record.provisionInterest,jdbcType=DECIMAL},
      balance = #{record.balance,jdbcType=DECIMAL},
      create_time = #{record.createTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.netfinworks.optimus.entity.ChanViewEntity" >
    update t_chan_view
    <set >
      <if test="chanId != null" >
        chan_id = #{chanId,jdbcType=VARCHAR},
      </if>
      <if test="date != null" >
        date = #{date,jdbcType=DATE},
      </if>
      <if test="previous != null" >
        previous = #{previous,jdbcType=DECIMAL},
      </if>
      <if test="deposit != null" >
        deposit = #{deposit,jdbcType=DECIMAL},
      </if>
      <if test="withdraw != null" >
        withdraw = #{withdraw,jdbcType=DECIMAL},
      </if>
      <if test="invest != null" >
        invest = #{invest,jdbcType=DECIMAL},
      </if>
      <if test="principal != null" >
        principal = #{principal,jdbcType=DECIMAL},
      </if>
      <if test="interest != null" >
        interest = #{interest,jdbcType=DECIMAL},
      </if>
      <if test="provisionInvest != null" >
        provision_invest = #{provisionInvest,jdbcType=DECIMAL},
      </if>
      <if test="provisionPrincipal != null" >
        provision_principal = #{provisionPrincipal,jdbcType=DECIMAL},
      </if>
      <if test="provisionInterest != null" >
        provision_interest = #{provisionInterest,jdbcType=DECIMAL},
      </if>
      <if test="balance != null" >
        balance = #{balance,jdbcType=DECIMAL},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.netfinworks.optimus.entity.ChanViewEntity" >
    update t_chan_view
    set chan_id = #{chanId,jdbcType=VARCHAR},
      date = #{date,jdbcType=DATE},
      previous = #{previous,jdbcType=DECIMAL},
      deposit = #{deposit,jdbcType=DECIMAL},
      withdraw = #{withdraw,jdbcType=DECIMAL},
      invest = #{invest,jdbcType=DECIMAL},
      principal = #{principal,jdbcType=DECIMAL},
      interest = #{interest,jdbcType=DECIMAL},
      provision_invest = #{provisionInvest,jdbcType=DECIMAL},
      provision_principal = #{provisionPrincipal,jdbcType=DECIMAL},
      provision_interest = #{provisionInterest,jdbcType=DECIMAL},
      balance = #{balance,jdbcType=DECIMAL},
      create_time = #{createTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=VARCHAR}
  </update>
</mapper>