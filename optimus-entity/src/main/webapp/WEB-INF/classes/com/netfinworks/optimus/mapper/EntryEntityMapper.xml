<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.netfinworks.optimus.mapper.EntryEntityMapper" >
  <resultMap id="BaseResultMap" type="com.netfinworks.optimus.entity.EntryEntity" >
    <id column="entry_id" property="entryId" jdbcType="BIGINT" />
    <result column="amount" property="amount" jdbcType="DECIMAL" />
    <result column="order_id" property="orderId" jdbcType="VARCHAR" />
    <result column="order_type" property="orderType" jdbcType="VARCHAR" />
    <result column="dc" property="dc" jdbcType="CHAR" />
    <result column="member_id" property="memberId" jdbcType="VARCHAR" />
    <result column="account_id" property="accountId" jdbcType="VARCHAR" />
    <result column="after_balance" property="afterBalance" jdbcType="DECIMAL" />
    <result column="before_balance" property="beforeBalance" jdbcType="DECIMAL" />
    <result column="digest" property="digest" jdbcType="VARCHAR" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="ext1" property="ext1" jdbcType="VARCHAR" />
    <result column="ext2" property="ext2" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    entry_id, amount, order_id, order_type, dc, member_id, account_id, after_balance, 
    before_balance, digest, create_time, ext1, ext2
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.netfinworks.optimus.entity.EntryEntityExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from t_entry
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
    <if test="limitStart != null and limitStart >= 0" >
      limit #{limitStart}, #{limitEnd}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from t_entry
    where entry_id = #{entryId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from t_entry
    where entry_id = #{entryId,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.netfinworks.optimus.entity.EntryEntityExample" >
    delete from t_entry
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.netfinworks.optimus.entity.EntryEntity" >
    insert into t_entry (entry_id, amount, order_id, 
      order_type, dc, member_id, 
      account_id, after_balance, before_balance, 
      digest, create_time, ext1, 
      ext2)
    values (#{entryId,jdbcType=BIGINT}, #{amount,jdbcType=DECIMAL}, #{orderId,jdbcType=VARCHAR}, 
      #{orderType,jdbcType=VARCHAR}, #{dc,jdbcType=CHAR}, #{memberId,jdbcType=VARCHAR}, 
      #{accountId,jdbcType=VARCHAR}, #{afterBalance,jdbcType=DECIMAL}, #{beforeBalance,jdbcType=DECIMAL}, 
      #{digest,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, #{ext1,jdbcType=VARCHAR}, 
      #{ext2,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.netfinworks.optimus.entity.EntryEntity" >
    insert into t_entry
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="entryId != null" >
        entry_id,
      </if>
      <if test="amount != null" >
        amount,
      </if>
      <if test="orderId != null" >
        order_id,
      </if>
      <if test="orderType != null" >
        order_type,
      </if>
      <if test="dc != null" >
        dc,
      </if>
      <if test="memberId != null" >
        member_id,
      </if>
      <if test="accountId != null" >
        account_id,
      </if>
      <if test="afterBalance != null" >
        after_balance,
      </if>
      <if test="beforeBalance != null" >
        before_balance,
      </if>
      <if test="digest != null" >
        digest,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="ext1 != null" >
        ext1,
      </if>
      <if test="ext2 != null" >
        ext2,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="entryId != null" >
        #{entryId,jdbcType=BIGINT},
      </if>
      <if test="amount != null" >
        #{amount,jdbcType=DECIMAL},
      </if>
      <if test="orderId != null" >
        #{orderId,jdbcType=VARCHAR},
      </if>
      <if test="orderType != null" >
        #{orderType,jdbcType=VARCHAR},
      </if>
      <if test="dc != null" >
        #{dc,jdbcType=CHAR},
      </if>
      <if test="memberId != null" >
        #{memberId,jdbcType=VARCHAR},
      </if>
      <if test="accountId != null" >
        #{accountId,jdbcType=VARCHAR},
      </if>
      <if test="afterBalance != null" >
        #{afterBalance,jdbcType=DECIMAL},
      </if>
      <if test="beforeBalance != null" >
        #{beforeBalance,jdbcType=DECIMAL},
      </if>
      <if test="digest != null" >
        #{digest,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="ext1 != null" >
        #{ext1,jdbcType=VARCHAR},
      </if>
      <if test="ext2 != null" >
        #{ext2,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.netfinworks.optimus.entity.EntryEntityExample" resultType="java.lang.Integer" >
    select count(*) from t_entry
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update t_entry
    <set >
      <if test="record.entryId != null" >
        entry_id = #{record.entryId,jdbcType=BIGINT},
      </if>
      <if test="record.amount != null" >
        amount = #{record.amount,jdbcType=DECIMAL},
      </if>
      <if test="record.orderId != null" >
        order_id = #{record.orderId,jdbcType=VARCHAR},
      </if>
      <if test="record.orderType != null" >
        order_type = #{record.orderType,jdbcType=VARCHAR},
      </if>
      <if test="record.dc != null" >
        dc = #{record.dc,jdbcType=CHAR},
      </if>
      <if test="record.memberId != null" >
        member_id = #{record.memberId,jdbcType=VARCHAR},
      </if>
      <if test="record.accountId != null" >
        account_id = #{record.accountId,jdbcType=VARCHAR},
      </if>
      <if test="record.afterBalance != null" >
        after_balance = #{record.afterBalance,jdbcType=DECIMAL},
      </if>
      <if test="record.beforeBalance != null" >
        before_balance = #{record.beforeBalance,jdbcType=DECIMAL},
      </if>
      <if test="record.digest != null" >
        digest = #{record.digest,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null" >
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.ext1 != null" >
        ext1 = #{record.ext1,jdbcType=VARCHAR},
      </if>
      <if test="record.ext2 != null" >
        ext2 = #{record.ext2,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update t_entry
    set entry_id = #{record.entryId,jdbcType=BIGINT},
      amount = #{record.amount,jdbcType=DECIMAL},
      order_id = #{record.orderId,jdbcType=VARCHAR},
      order_type = #{record.orderType,jdbcType=VARCHAR},
      dc = #{record.dc,jdbcType=CHAR},
      member_id = #{record.memberId,jdbcType=VARCHAR},
      account_id = #{record.accountId,jdbcType=VARCHAR},
      after_balance = #{record.afterBalance,jdbcType=DECIMAL},
      before_balance = #{record.beforeBalance,jdbcType=DECIMAL},
      digest = #{record.digest,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      ext1 = #{record.ext1,jdbcType=VARCHAR},
      ext2 = #{record.ext2,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.netfinworks.optimus.entity.EntryEntity" >
    update t_entry
    <set >
      <if test="amount != null" >
        amount = #{amount,jdbcType=DECIMAL},
      </if>
      <if test="orderId != null" >
        order_id = #{orderId,jdbcType=VARCHAR},
      </if>
      <if test="orderType != null" >
        order_type = #{orderType,jdbcType=VARCHAR},
      </if>
      <if test="dc != null" >
        dc = #{dc,jdbcType=CHAR},
      </if>
      <if test="memberId != null" >
        member_id = #{memberId,jdbcType=VARCHAR},
      </if>
      <if test="accountId != null" >
        account_id = #{accountId,jdbcType=VARCHAR},
      </if>
      <if test="afterBalance != null" >
        after_balance = #{afterBalance,jdbcType=DECIMAL},
      </if>
      <if test="beforeBalance != null" >
        before_balance = #{beforeBalance,jdbcType=DECIMAL},
      </if>
      <if test="digest != null" >
        digest = #{digest,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="ext1 != null" >
        ext1 = #{ext1,jdbcType=VARCHAR},
      </if>
      <if test="ext2 != null" >
        ext2 = #{ext2,jdbcType=VARCHAR},
      </if>
    </set>
    where entry_id = #{entryId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.netfinworks.optimus.entity.EntryEntity" >
    update t_entry
    set amount = #{amount,jdbcType=DECIMAL},
      order_id = #{orderId,jdbcType=VARCHAR},
      order_type = #{orderType,jdbcType=VARCHAR},
      dc = #{dc,jdbcType=CHAR},
      member_id = #{memberId,jdbcType=VARCHAR},
      account_id = #{accountId,jdbcType=VARCHAR},
      after_balance = #{afterBalance,jdbcType=DECIMAL},
      before_balance = #{beforeBalance,jdbcType=DECIMAL},
      digest = #{digest,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      ext1 = #{ext1,jdbcType=VARCHAR},
      ext2 = #{ext2,jdbcType=VARCHAR}
    where entry_id = #{entryId,jdbcType=BIGINT}
  </update>
</mapper>